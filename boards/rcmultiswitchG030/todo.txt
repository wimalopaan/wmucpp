bugs:
-----

hardware:
---------

* connector???

todo:
-----
* unify stm32 g031/g051/g071/g0b1 variants
* make flash work with non-MORSE
* send inputs as ArduPilot tunnel messages (for e.g. inputs)
* running light mode: parameter: speed, activate-output, activate-next address, (pwm)
* running light mode: crsf command messages
* running light mode: problem: half-duplex-bus arbitration,
                      reliable only possible with CRSF-switch project sending arbitration tokens
                      or doing the crsf-switch the routing
* watchdog
* statt Expo: PWM Duty Max Scaling 1/0.1/0.01
* serial-bootloader (maybe OTA) (maybe use ESCape32-tool)
* use stm32G051 instead of stm32G030/1 (more flash and RAM)

questionable:
-------------

details:
-----

done:
-----
* unify crsf units (use ms instead of dezi seconds)
* increase output current by grouping outputs together (timer-synchronization for pwm)
* use eeprom-setting for enabling virtuals
* introduce virtuals / patterns address
* simplify code (parameters like rcLed4x4, etc.)
* add virtual switches as group of outputs
* Multiple flash (add parameter: blinkCount, name: "Intervall(count)")
* Telemetrie (state-machine): für neue Hardware mit Spannungssensor (HW_MSW11)
* switch to connected mode even if only link-stat packages are received
* accept broadcast 0x00 command packages (not only range 0xc0-0xcf)
* check for half-duplex or full-duplex connection
* respond to crsf-ping if in unconnected mode (switch to connected if received ping)
* prop mode (remote) does not work
* unify all Makefiles to one, then using different targets
* make option to use crsf-tx-line open-drain (to parallel multiple non-custom boards like nucleo / weact)
* nucleo/weact boards: check pwm grouping for crsf menu settings
* pwm settings wrong for nucleo/weact (due to different mappings compared to custom board)
* add compiletime option for stm-nucleo/stm-dev (WeAct) board: https://de.aliexpress.com/item/1005005748198584.html
** layout
** full-duplex with open-drain (crsf)
* remove old test source files msw01.cc - msw12.cc
* implement SET4M protocol
* check baud rates (e.g. also 400kb for TBS)
* morse parameters
* check channel mapping???
* remote config items (ls, type, ...) (AUTO_CONF)
* DMA Usart
* crsf: FOLDER: send children IDs (as TBS specs)
* proportional Modus
* EEprom read: CRSF-Adresse überschreibt Slot -> Einstellung geht verloren
* Slots um Faktor 2 auseinander legen
* EEProm: return std::pair<>
* CRSF-Address einstellbar (evtl. Problem im ELRS? PR wmaddress für ELRS)
* bei unterschiedlichen CRSF-Adressen (benötigt dann PR wmaddress im ELRS) Antwort
  auf das DEVICE_PING mit Paket-Wartezyklen gemäß Adresse.
* Option: unique-address -> Config-Menu immer aktiviert, DEVICE_PING Verfahren anwenden
* fixed GPS telemetry problem
* activate config-protocol only w/ telemetry on
* PWM Frequenz änderbar (Gruppen im Menu?)
* Top-Menu: Adresse, Outputs, Gruppen
* Flash speichern der config-Daten
* Adresse auswerten?
* Led blinken: kein Signal, keine Commands, Active-Mode
* simple Bedienung über elrsv3 (z.B. für FlySky i6x)

open:
-----
* Texte konfigurierbar machen (mindestens hardcoded) (evtl. Widget)
** elrsv3.lua kann das (noch) nicht

impossible:
-----
* support addressable LEDs (WS1812, APA102)
* DMA für PWM statt ISR, geht nicht (GPIO nicht DMA fähig auf G0xx)

error:
-----
* EEprom: ld-script
